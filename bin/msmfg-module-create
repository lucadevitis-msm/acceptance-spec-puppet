#!/usr/bin/env ruby
# rubocop:disable Metrics/LineLength
require 'msmfg_spec_helper/rake_application'

APP_NAME = File.basename(__FILE__).freeze

MSMFGSpecHelper.rake_application(APP_NAME) do
  require 'msmfg_spec_helper/rake_tasks/module/create'

  task skeleton: MSMFG_MODULE.directories
  task default: MSMFG_MODULE.files.collect {|f| f[:name]}

  task :help do
    puts <<-EOS
NAME
  #{APP_NAME} - Creates the all the files required by an MSMFG puppet module

SYNOPSIS
  #{APP_NAME} [help|default|file]

DESCRIPTION
  This is a rake application, therefore you can use any rake option (if that
  helps). The module name is guessed from (in order):

  - Local metadata.json
  - Environment variable MODULE_NAME
  - Current directory name

  If no task or file is specified, the default task is run. If a file already
  exists, it is skipped.

TASKS
    EOS
    width = MSMFG_MODULE.files.collect { |f| f[:name].length }.max
    printf("  %s %-#{width}s # %s\n", APP_NAME, 'help', 'Shows this help')
    printf("  %s %-#{width}s # %s\n", APP_NAME, 'default', 'Creates all the files')
    printf("  %s %-#{width}s # %s\n", APP_NAME, 'skeleton', 'Creates all the directories')
    MSMFG_MODULE.files.each do |f|
      printf("  %s %-#{width}s # Creates %s\n", APP_NAME, f[:name], f[:name])
    end
  end
end
# vim: set ft=ruby:
